name: Build

on:
  push:
    branches:
      - 'production'
      - 'demo'
      - 'main'
      - '[0-9]+**'
      - '[a-zA-Z]+/[0-9]+**'
      - '!old/**'
      - '!nobuild/**'
  pull_request:
    types: [opened, synchronize, reopened]
  workflow_dispatch:
    inputs:
      DEPLOY:
        type: boolean
        description: Deploy artifacts
        default: false
        required: false

permissions:
  actions: read
  
jobs:
  up:
    runs-on: ubuntu-22.04
    #runs-on: macos-13
    concurrency:
      group: ${{ (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/production' || inputs.DEPLOY) && 'concurrency-counter-increment' || github.run_id }}
      #cancel-in-progress: ${{ github.ref != 'refs/heads/main' && github.ref != 'refs/heads/production' && inputs.DEPLOY == false }}
      cancel-in-progress: false
    steps:
      - name: Echo
        run: |
          echo $(date)
          echo $(python3 -c 'import datetime; print(datetime.datetime.now().astimezone().strftime("%Y-%m-%dT%H:%M:%S %z %Z"))')
          echo $RUNNER_TEMP
          echo "github.run_id: ${{ github.run_id }}"
          echo "github.run_number: ${{ github.run_number }}"
          echo "github.run_attempt: ${{ github.run_attempt }}"
          echo "github.repository: ${{ github.repository }}"
          echo "github.ref: ${{ github.ref }}"
          echo "github.event: ${{ toJSON(github.event) }}"
          echo "github.event.head_commit: ${{ toJSON(github.event.head_commit) }}"
          echo "github.event.head_commit.body: ${{ toJSON(github.event.head_commit.body) }}"
          echo "github.event.pull_request.head.commit.message: ${{ github.event.pull_request.head.commit.message }}"
          echo "github.event.pull_request.body: ${{ github.event.pull_request.body }}"
          echo "build job url: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
          echo "Is fork: ${{ github.event.pull_request.head.repo.fork == true }}"
          echo "Repo: ${{ github.event.pull_request.head.repo.full_name }}"
          echo "Ref: ${{ github.head_ref || github.ref_name }}"
          echo "Deploy: ${{ inputs.DEPLOY }}"
          echo "Is deploy: ${{ inputs.DEPLOY && 'yes' || 'no' }}"
          echo "Is main: ${{ github.ref == 'refs/heads/main' && 'yes' || 'no' }}"
          echo "Is production: ${{ github.ref == 'refs/heads/production' && 'yes' || 'no' }}"
          echo "Concurrency group: ${{ (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/production' || inputs.DEPLOY) && 'concurrency-counter-increment' || github.run_id }}"
          echo "Cancel in progress: ${{ (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/production' || inputs.DEPLOY) && 'false' || 'true' }}"

      - name: env
        run: export | grep -vi "token"

      - name: Check if triggered manually
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            echo "This workflow was triggered manually."
          else
            echo "This workflow was triggered automatically."
          fi

      - name: Trigger only on dispatch.
        if: github.event_name == 'workflow_dispatch'
        run: echo "This workflow was triggered automatically."

      - name: Print event object
        run: echo '${{ toJson(github.event) }}' | jq .

      - name: Print event.pull_request object
        run: echo '${{ toJson(github.event.pull_request) }}' | jq .

      - name: Print pull_request info
        run: |
          echo 'PR number: ${{ github.event.pull_request.number }}'
          echo 'PR source: ${{ github.event.pull_request.head.ref }}'
          echo 'PR target: ${{ github.event.pull_request.base.ref }}'

      - name: Counter
        id: incremented
        run: |
          NUM=$(("${{ vars.NUM }}" + 1))
          echo "Var sum: $NUM"
          echo "number=$NUM" >> "$GITHUB_OUTPUT"

      - name: Conditionally skip
        id: conditional
        if: ${{ inputs.DEPLOY == true }}
        run: |
          echo "Conditionally deploy.."

      - name: Print step outputs
        run: |
          echo '${{ toJSON(steps.conditional) }}' | jq
          echo '${{ toJSON(steps.incremented) }}' | jq

      - name: Only when skipped.
        if: ${{ steps.conditional.outcome == 'skipped' }}
        run: |
          # Your step 2 commands here

      - name: Update vars.NUM
        if: success() && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/production' || inputs.DEPLOY == true)
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.PAT }}
          script: |
            github.rest.actions.updateRepoVariable({ 
              "owner": "${{ github.repository_owner }}", 
              "repo": "${{ github.event.repository.name }}",
              "name": "NUM", 
              "value": "${{ steps.incremented.outputs.number }}" 
            });

      - name: List all installed packages
        run: |
          sudo apt list --installed
         
      - name: List common tools if installed
        run: |
          sudo apt list --installed | grep -iE "bash|mc|terraform|ansible|git|python|python3|curl|wget|docker|jq|xq|pgsql|postgres"

      - name: Check if first build for branch
        id: check_first_build
        uses: actions/github-script@v6
        with:
          script: |
            const branch = context.ref.replace('refs/heads/', '');
            const { data: runs } = await github.rest.actions.listWorkflowRunsForRepo({
              owner: context.repo.owner,
              repo: context.repo.repo,
              branch: branch,
              per_page: 2 // Just check if there is at least one previous run
            });

            const isFirstBuild = runs.workflow_runs.length === 0;
            core.setOutput('isFirstBuild', isFirstBuild);

      - name: Print if first build
        run: |
          echo "Is first build: ${{ steps.check_first_build.outputs.isFirstBuild }}"

      
      - name: Install ansible
        run: |
          sudo apt-get update
          sudo apt-get install -y software-properties-common
          sudo add-apt-repository --yes --update ppa:ansible/ansible
          sleep 2
          sudo apt-get update
          sudo apt-get install -y ansible
         
      - name: Sleep
        run: |
          sleep 15

      - name: Only when skipped, but not when cancelled.
        if: ${{ steps.conditional.outcome == 'skipped' }}
        run: |
          echo "This task."         
          sleep 10

  # This works only on branches, if you have a PR the event does not have a `head_commit`, but a `pull_request` and it won't have the commit body message.
  on-comment:
    runs-on: ubuntu-22.04
    if: ${{ github.event.head_commit }}
    steps: 
      - name: Trigger only if commit body message contains â™¯trigger
        if: success() && contains(github.event.head_commit.message, '#trigger')
        run: |
          echo "Triggers ony if the last commit message contains the #trigger..."


  call_reusable:
    uses: ./.github/workflows/reusable.yml
    secrets: inherit
    with:
      languages: '["java", "javascript", "c#"]'
